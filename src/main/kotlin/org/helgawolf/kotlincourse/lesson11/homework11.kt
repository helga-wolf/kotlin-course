package org.helgawolf.kotlincourse.lesson11

fun main() {
//Задание 1: Создание Пустого Словаря
//Создайте пустой неизменяемый словарь, где ключи и значения - целые числа.

    val emptyImmutableMap: Map<Int, Int> = mapOf()

//Задание 2: Создание и Инициализация Словаря
//Создайте словарь, инициализированный несколькими парами "ключ-значение", где ключи - float, а значения - double

    val map2: Map<Float, Double> = mapOf(1.9F to 0.22, 6.9F to 1.9999, 84848484.8888F to 1.111111)

//Задание 3: Создание Изменяемого Словаря
//Создайте изменяемый словарь, где ключи - целые числа, а значения - строки.

    val map3: MutableMap<Int, String> = mutableMapOf()

//Задание 4: Добавление Элементов в Словарь
//Имея изменяемый словарь, добавьте в него новые пары "ключ-значение".

    val map4 = mutableMapOf(1 to "Hi", 2 to "there")
    map4[3] = "How are you?"
    println(map4)

//Задание 5: Получение Значений из Словаря
//Используя словарь из предыдущего задания, извлеките значение, используя ключ. Попробуй получить значение с ключом, которого в словаре нет.
    println(map4[1])
    println(map4[9458])

//Задание 6: Удаление Элементов из Словаря
//Удалите определенный элемент из изменяемого словаря по его ключу.

    map4.remove(2)


//Задание 7: Перебор Словаря в Цикле
//Создайте словарь (ключи Double, значения Int) и выведи в цикле результат деления ключа на значение. Не забудь обработать деление на 0 (в этом случае выведи слово “бесконечность”)

    val map7: Map<Double, Int> = mapOf(2.2 to 2, 9.99 to 3, 10.0 to 5, 100.0 to 0)
    for ((key, value) in map7) {
        val result = key / value
        println("$key / $value = $result")
        if (value == 0)
        println("Бесконечность")
    }

//Задание 8: Перезапись Элементов Словаря
//Измените значение для существующего ключа в изменяемом словаре.

    val map8: MutableMap<Int, Int> = mutableMapOf(1 to 1, 2 to 2)
    map8[1] = 100
    println(map8)

//Задание 9: Сложение Двух Словарей
//Создайте два словаря и объедините их в третьем изменяемом словаре через циклы.

    val map9: Map<String, String> = mapOf("day" to "night", "evening" to "morning")
    val map99: Map<String, String> = mapOf("aaa" to "bbb", "ccc" to "ddd")
    val mergedMap = mutableMapOf<String, String>()
    // Объединяем два словаря в третьем словаре
    for ((key, value) in map9) {
        mergedMap[key] = value
    }
    for ((key, value) in map99) {
        mergedMap[key] = value
    }
    println(mergedMap)


//Задание 10: Словарь с Сложными Типами
//Создайте словарь, где ключами являются строки, а значениями - списки целых чисел. Добавьте несколько элементов в этот словарь.

    val map10: MutableMap<String, List<Int>> = mutableMapOf()
    map10["строка 1"] = listOf(1, 2, 3)
    map10["строка 2"] = listOf(333, 444, 666)
    println(map10)

//Задание 11: Использование Множества в Качестве Значения
//Создай словарь, в котором ключи - это целые числа, а значения - изменяемые множества строк. Добавь данные в словарь. Получи значение по ключу (это должно быть множество строк) и добавь в это множество ещё строку. Распечатай полученное множество.

    val map11: MutableMap<Int, MutableSet<String>> = mutableMapOf()
    map11[1] = mutableSetOf("adftrdft", "bvhgfgf")
    val value1 = map11[1] ?: mutableSetOf()
    println(value1)
    value1.add("chfdrssh")
    println(value1)

//Задание 12: Поиск Элемента по Значению
//Создай словарь, где ключами будут пары чисел. Через перебор найди значение у которого пара будет содержать цифру 5 в качестве первого или второго значения.



//======
//Напиши решения задач. В каждом случае нужно проанализировать и подобрать оптимальный тип словаря.
//Задание 6: Словарь Библиотека
//Ключи - автор книги, значения - список книг

    val libraryMap: MutableMap<String, List<String>> = mutableMapOf()

//Задание 12: Справочник Растений
//Ключи - типы растений (например, "Цветы", "Деревья"), значения - списки названий растений

    val plantTypes: MutableMap<String, List<String>> = mutableMapOf()

//Задание 8: Четвертьфинала
//Ключи - названия спортивных команд, значения - списки игроков каждой команды

    val sportTeams = mutableMapOf<String, List<String>>()

//Задание 9: Курс лечения
//Ключи - даты, значения - список препаратов принимаемых в дату

    val medication = mutableMapOf<String, List<String>>()

//Задание 10: Словарь Путешественника
//Ключи - страны, значения - словари из городов со списком интересных мест.

    val countrySights: MutableMap<String, List<String>> = mutableMapOf()
}
