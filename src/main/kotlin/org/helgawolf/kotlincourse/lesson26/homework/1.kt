package org.helgawolf.kotlincourse.lesson26.homework

//Напишите функцию, которая принимает другую функцию без аргументов и возвращаемого значения.

fun fun1(
    fun12: () -> Unit
) {}

//Создайте функцию, принимающую функцию с одним аргументом типа Int и возвращающую String.

fun fun2(
    fun22: (Int) -> String
) {}

//Реализуйте функцию, принимающую функцию расширения типа Int, принимающую String и возвращающую Boolean.

fun fun3(
    fun33: (Int).(String) -> Boolean, number: Int, line: String
): Boolean {
    return number.fun33(line)
}

//Напишите функцию, которая принимает функцию с двумя аргументами типа Double и возвращает Boolean.

fun fun4(
    fun44: (Double, Double) -> Boolean
) {}

//Напишите функцию, которая принимает функцию с одним аргументом-дженериком T и возвращает List<T>.

fun <T> fun5(
    fun55: (T) -> List<T>
) {}

//Создайте функцию, принимающую функцию с аргументом типа String и возвращающую другую функцию, принимающую Int и возвращающую Boolean.

fun fun6(
    fun66: (String) -> (Int) -> Boolean
) {}

//Напишите функцию, которая принимает список чисел, множество строк, функцию с аргументами типа List<Int> и Set<String> и возвращающую Map<String, Int>.

fun fun7(
   arg1: List<Int>, arg2: Set<String>,
   fun77: (List<Int>, Set<String>) -> Map<String, Int>
) {}

//Напишите функцию, возвращающую строку, принимающую число и функцию, принимающую число и возвращающую строку

fun fun8(
    arg1: Int,
    fun88: (Int) -> String
): String {
    return "хз чо"
}

//Напишите функцию, принимающую функцию, которая возвращает функцию без аргументов и возвращаемого значения.

fun fun9(
    fun99: () -> () -> Unit
) {}
